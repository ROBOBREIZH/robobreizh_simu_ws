// Generated by gencpp from file dialog/speak.msg
// DO NOT EDIT!


#ifndef DIALOG_MESSAGE_SPEAK_H
#define DIALOG_MESSAGE_SPEAK_H

#include <ros/service_traits.h>


#include <dialog/speakRequest.h>
#include <dialog/speakResponse.h>


namespace dialog
{

struct speak
{

typedef speakRequest Request;
typedef speakResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct speak
} // namespace dialog


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dialog::speak > {
  static const char* value()
  {
    return "cb3eeceaf06182d7c3ca6a3287af50f5";
  }

  static const char* value(const ::dialog::speak&) { return value(); }
};

template<>
struct DataType< ::dialog::speak > {
  static const char* value()
  {
    return "dialog/speak";
  }

  static const char* value(const ::dialog::speak&) { return value(); }
};


// service_traits::MD5Sum< ::dialog::speakRequest> should match 
// service_traits::MD5Sum< ::dialog::speak > 
template<>
struct MD5Sum< ::dialog::speakRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dialog::speak >::value();
  }
  static const char* value(const ::dialog::speakRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dialog::speakRequest> should match 
// service_traits::DataType< ::dialog::speak > 
template<>
struct DataType< ::dialog::speakRequest>
{
  static const char* value()
  {
    return DataType< ::dialog::speak >::value();
  }
  static const char* value(const ::dialog::speakRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dialog::speakResponse> should match 
// service_traits::MD5Sum< ::dialog::speak > 
template<>
struct MD5Sum< ::dialog::speakResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dialog::speak >::value();
  }
  static const char* value(const ::dialog::speakResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dialog::speakResponse> should match 
// service_traits::DataType< ::dialog::speak > 
template<>
struct DataType< ::dialog::speakResponse>
{
  static const char* value()
  {
    return DataType< ::dialog::speak >::value();
  }
  static const char* value(const ::dialog::speakResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DIALOG_MESSAGE_SPEAK_H
