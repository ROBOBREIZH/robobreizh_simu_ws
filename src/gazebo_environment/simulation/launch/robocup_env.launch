<?xml version="1.0"?>
<launch>
  <arg name="launch_control_trajectory_all" default="true"/>
  <!-- Load the URDF Model -->
  <include file="$(find pepper_description)/launch/pepper_upload_CPU.launch" />  
  <remap from="/pepper/cmd_vel" to="/cmd_vel" />
  <env name="GAZEBO_MODEL_PATH" value="$(find pepper_gazebo_plugin)/models:$(optenv GAZEBO_MODEL_PATH)"/>
  <!-- <env name="GAZEBO_PLUGIN_PATH" value="$(find gazebo_animatedbox)/build:$(optenv GAZEBO_PLUGIN_PATH)"/> -->
  <!-- =/gazebo_environment/gazebo_animatedbox/build:$GAZEBO_PLUGIN_PATH -->
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
     <arg name="world_name" value="$(find aws_robomaker_small_house_world)/worlds/small_house.world"/>
    <arg name="paused" value="false"/>
  </include>


  <!-- Call Pepper Robot Trajectory Controller -->

  <include file="$(find pepper_control)/launch/pepper_control_trajectory.launch" unless="$(arg launch_control_trajectory_all)"/>
  <include file="$(find pepper_control)/launch/pepper_control_trajectory_all.launch" if="$(arg launch_control_trajectory_all)"/>
<!--
  <include file="$(find pepper_control)/launch/pepper_control_position.launch"/>
-->

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />  
  <!-- Spawn a robot into Gazebo -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
    args="-param robot_description -urdf -x -0.5 -y 1 -z 0.05 -model pepper_MP" />

  <node name="lower_arms" pkg="pepper_gazebo_plugin" type="arms_down.sh" output="screen" />
  
  <node name="laser_publisher" pkg="pepper_gazebo_plugin" type="laser_publisher.py"/>

  <!-- Depth Image -> Pointcloud -->
  <node pkg="nodelet" type="nodelet" args="manager" name="depth_image_nodelet_manager" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="pepper_pointcloud" args="load depth_image_proc/point_cloud_xyz depth_image_nodelet_manager --no-bond">
        <remap from="camera_info" to="/pepper/camera/depth/camera_info"/>
        <remap from="image_rect" to="/pepper/camera/depth/image_raw"/>
  </node>

    <!-- Pointcloud -> Laserscan -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pepper_fake_laser">
        <remap from="cloud_in" to="points" />
        <param name="scan_time" type="double" value="0.2" />
        <param name="range_min" type="double" value="0.4" />
        <param name="range_max" type="double" value="8.0" />
        <param name="use_inf" type="boolean" value="true" />
        <param name="min_height" type="double" value="0.05" />
        <param name="max_height" type="double" value="1.0" />
        <param name="target_frame" type="string" value="base_link" />
        <param name="concurrency_level" type="int" value="0" />
    </node>

</launch>
