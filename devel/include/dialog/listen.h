// Generated by gencpp from file dialog/listen.msg
// DO NOT EDIT!


#ifndef DIALOG_MESSAGE_LISTEN_H
#define DIALOG_MESSAGE_LISTEN_H

#include <ros/service_traits.h>


#include <dialog/listenRequest.h>
#include <dialog/listenResponse.h>


namespace dialog
{

struct listen
{

typedef listenRequest Request;
typedef listenResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct listen
} // namespace dialog


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dialog::listen > {
  static const char* value()
  {
    return "097728e714f8ef53acfa9772a3a81d05";
  }

  static const char* value(const ::dialog::listen&) { return value(); }
};

template<>
struct DataType< ::dialog::listen > {
  static const char* value()
  {
    return "dialog/listen";
  }

  static const char* value(const ::dialog::listen&) { return value(); }
};


// service_traits::MD5Sum< ::dialog::listenRequest> should match 
// service_traits::MD5Sum< ::dialog::listen > 
template<>
struct MD5Sum< ::dialog::listenRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dialog::listen >::value();
  }
  static const char* value(const ::dialog::listenRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dialog::listenRequest> should match 
// service_traits::DataType< ::dialog::listen > 
template<>
struct DataType< ::dialog::listenRequest>
{
  static const char* value()
  {
    return DataType< ::dialog::listen >::value();
  }
  static const char* value(const ::dialog::listenRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dialog::listenResponse> should match 
// service_traits::MD5Sum< ::dialog::listen > 
template<>
struct MD5Sum< ::dialog::listenResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dialog::listen >::value();
  }
  static const char* value(const ::dialog::listenResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dialog::listenResponse> should match 
// service_traits::DataType< ::dialog::listen > 
template<>
struct DataType< ::dialog::listenResponse>
{
  static const char* value()
  {
    return DataType< ::dialog::listen >::value();
  }
  static const char* value(const ::dialog::listenResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DIALOG_MESSAGE_LISTEN_H
